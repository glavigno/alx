// Mocks generated by Mockito 5.4.0 from annotations
// in alx_technical_test/test/repositories/character_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:alx_technical_test/data/models/character.dart' as _i6;
import 'package:alx_technical_test/data/repositories/local_data_source.dart'
    as _i7;
import 'package:alx_technical_test/data/repositories/remote_data_source.dart'
    as _i4;
import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSharedPreferences_1 extends _i1.SmartFake
    implements _i3.SharedPreferences {
  _FakeSharedPreferences_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i4.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get httpClient => (super.noSuchMethod(
        Invocation.getter(#httpClient),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#httpClient),
        ),
      ) as _i2.Dio);
  @override
  set httpClient(_i2.Dio? _httpClient) => super.noSuchMethod(
        Invocation.setter(
          #httpClient,
          _httpClient,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<List<_i6.Character>> getCharacters(int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCharacters,
          [page],
        ),
        returnValue: _i5.Future<List<_i6.Character>>.value(<_i6.Character>[]),
      ) as _i5.Future<List<_i6.Character>>);
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i7.LocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.SharedPreferences get localStorageClient => (super.noSuchMethod(
        Invocation.getter(#localStorageClient),
        returnValue: _FakeSharedPreferences_1(
          this,
          Invocation.getter(#localStorageClient),
        ),
      ) as _i3.SharedPreferences);
  @override
  _i5.Future<List<T>> getList<T>(
    String? key,
    T Function(Map<String, dynamic>)? fromJson,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getList,
          [
            key,
            fromJson,
          ],
        ),
        returnValue: _i5.Future<List<T>>.value(<T>[]),
      ) as _i5.Future<List<T>>);
  @override
  _i5.Future<void> setList<T>(
    String? key,
    List<T>? list,
    void Function(T)? toJson,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setList,
          [
            key,
            list,
            toJson,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<bool> deleteCache() => (super.noSuchMethod(
        Invocation.method(
          #deleteCache,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
